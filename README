Сервер:
- Cерверное приложение реализовано в виде Asp.Net приложения;
- При запуске сервера задаётся параметр N (задается в файле appsettings.json (N = Nthread));
- Тело запроса представляет собой текстовую строку, а в качестве ответа клиент получает информацию, является ли указанная строка палиндромом (без учета пробелов) или сообщение об ошибке;
- Одновременно сервер может обрабатывать только N запросов (реализован в виде семафора со счетчиком N). При превышении количества запросов, сервер моментально отвечает ошибкой на такой запрос;
- Чтобы легко можно было воспроизвести ситуацию перегрузки сервера, запросы клиента обрабатываться с искусственной задержкой в 1 секунду (Реализовано при помощи установки потока на паузу);

Клиент:
- Клиентское приложение реализовано в виде Web приложения;
- В клиенте при нажатии на соответствующую кнопку открывается диалог выбора файла (.txt) с входными данными произвольной длины;
- Клиент обрабатывает загруженный файл и форматирует содержимое в строку, после чего отправляет его на сервер и ожидает ответ. Ответ обрабатывается клиентом и демонстрирует пользователю в удобном для понимания виде. 1 файл соответствует 1 запросу на сервер;
- Клиент не знает, сколько одновременно запросов может обрабатывать сервер. Но он стремится использовать сервер по максимуму. (Т.е. 1 клиент при достаточно большом количестве файлов может привести сервер к перегрузке). Пользователю в поле результата обработки запроса сообщается об ошибке (Клиент обрабатывает все файлы);
